========================================================================
  MODIFICAÇÕES PRINCIPAIS NO ARQUIVO script.js
========================================================================

ATENÇÃO: O arquivo script.js completo é muito grande.
Abaixo estão as PRINCIPAIS MODIFICAÇÕES que você precisa fazer.

========================================================================
1. ATUALIZAR FUNÇÕES DE VERIFICAÇÃO (no início do arquivo)
========================================================================

// FUNÇÃO ATUALIZADA: Verificar se um paciente está agendado
function isPacienteAgendado(nomePaciente) {
    if (!nomePaciente || typeof nomePaciente !== 'string') {
        return false;
    }
    const nome = nomePaciente.trim().toLowerCase();
    // Verifica se NÃO é vaga livre e NÃO é vaga bloqueada
    const isLivre = nome === '' || nome === 'preencher';
    const isBloqueada = nome.includes('vaga bloqueada');
    return !isLivre && !isBloqueada;
}

// FUNÇÃO ATUALIZADA: Verificar se uma vaga está livre
function isVagaLivre(nomePaciente) {
    if (!nomePaciente || typeof nomePaciente !== 'string') {
        return true; // Vazio = vaga livre
    }
    const nome = nomePaciente.trim().toLowerCase();
    // Vaga livre: vazio ou "preencher" E NÃO é bloqueada
    const isLivre = nome === '' || nome === 'preencher';
    const isBloqueada = nome.includes('vaga bloqueada');
    return isLivre && !isBloqueada;
}

// NOVA FUNÇÃO: Verificar se uma vaga está bloqueada
function isVagaBloqueada(nomePaciente) {
    if (!nomePaciente || typeof nomePaciente !== 'string') {
        return false;
    }
    const nome = nomePaciente.trim().toLowerCase();
    // Vaga bloqueada: contém "vaga bloqueada" no texto
    return nome.includes('vaga bloqueada');
}

========================================================================
2. ATUALIZAR FUNÇÃO updateVagasLivresUnidadeCards()
========================================================================

Encontre a função updateVagasLivresUnidadeCards() e altere o HTML de:

class="bg-light-red-card ... border-l-red-400"
text-red-700

PARA:

class="bg-light-green-card ... border-l-green-400"
text-green-700

Exemplo completo:

function updateVagasLivresUnidadeCards() {
    const container = document.getElementById('vagasLivresUnidadeContainer');
    if (!container) return;

    const datasetBase = hasActiveFilters() ? filteredData : allData;
    const vagasLivresPorUnidade = {};
    
    UNIDADES_SAUDE.forEach(unidade => {
        vagasLivresPorUnidade[unidade] = 0;
    });
    
    datasetBase.forEach(item => {
        if (item.unidadeSaude && UNIDADES_SAUDE.includes(item.unidadeSaude)) {
            if (isVagaLivre(item.nomePaciente)) {
                vagasLivresPorUnidade[item.unidadeSaude]++;
            }
        }
    });

    // MODIFICADO: classe bg-light-green-card e cor verde
    const cardsHTML = UNIDADES_SAUDE.map((unidade, index) => {
        const total = vagasLivresPorUnidade[unidade] || 0;
        
        return `
            <div class="bg-light-green-card rounded-lg shadow-md p-6 border-l-4 border-l-green-400 hover:shadow-lg transition-shadow duration-200">
                <div class="text-center">
                    <p class="text-lg font-bold text-gray-800 mb-3">${unidade}</p>
                    <p class="text-3xl font-bold text-green-700 mb-1">${total.toLocaleString()}</p>
                    <p class="text-sm text-gray-600">vagas livres</p>
                </div>
            </div>
        `;
    }).join('');

    container.innerHTML = cardsHTML;
}

========================================================================
3. ADICIONAR NOVA FUNÇÃO updateVagasBloqueadasUnidadeCards()
========================================================================

Adicione esta NOVA FUNÇÃO após updateVagasLivresUnidadeCards():

// NOVA FUNÇÃO: Atualizar cards de vagas bloqueadas por unidade
function updateVagasBloqueadasUnidadeCards() {
    const container = document.getElementById('vagasBloqueadasUnidadeContainer');
    if (!container) return;

    const datasetBase = hasActiveFilters() ? filteredData : allData;
    const vagasBloqueadasPorUnidade = {};
    
    // Inicializar todas as unidades com 0
    UNIDADES_SAUDE.forEach(unidade => {
        vagasBloqueadasPorUnidade[unidade] = 0;
    });
    
    // Contar apenas as vagas BLOQUEADAS usando função central
    datasetBase.forEach(item => {
        if (item.unidadeSaude && UNIDADES_SAUDE.includes(item.unidadeSaude)) {
            if (isVagaBloqueada(item.nomePaciente)) {
                vagasBloqueadasPorUnidade[item.unidadeSaude]++;
            }
        }
    });

    // Gerar HTML dos cards com FUNDO AMARELO CLARO
    const cardsHTML = UNIDADES_SAUDE.map((unidade, index) => {
        const total = vagasBloqueadasPorUnidade[unidade] || 0;
        
        return `
            <div class="bg-light-yellow-card rounded-lg shadow-md p-6 border-l-4 border-l-yellow-400 hover:shadow-lg transition-shadow duration-200">
                <div class="text-center">
                    <p class="text-lg font-bold text-gray-800 mb-3">${unidade}</p>
                    <p class="text-3xl font-bold text-yellow-700 mb-1">${total.toLocaleString()}</p>
                    <p class="text-sm text-gray-600">vagas bloqueadas</p>
                </div>
            </div>
        `;
    }).join('');

    container.innerHTML = cardsHTML;
}

========================================================================
4. ATUALIZAR FUNÇÃO updateDashboard()
========================================================================

Encontre a função updateDashboard() e adicione a chamada para a nova função:

function updateDashboard() {
    updateVagasUnidadeCards();
    updateVagasLivresUnidadeCards();
    updateVagasBloqueadasUnidadeCards();  // <--- ADICIONE ESTA LINHA
    updateCharts();
    updateTable();
    updateSummaryTables();
}

========================================================================
5. ATUALIZAR loadSampleData() (OPCIONAL - apenas para testes)
========================================================================

Na função loadSampleData(), adicione um exemplo de vaga bloqueada:

{
    unidadeSaude: 'Perobas',
    dataAgendamento: '15/12/2025',
    horarioAgendamento: '7h10',
    nomePaciente: 'VAGA BLOQUEADA/ ABERTURA NO SISTEMA VIVVER',
    telefone: '',
    prontuarioVivver: '',
    observacaoUnidadeSaude: '',
    perfilPacienteExame: '',
    laboratorioColeta: 'Parque São João'
}

========================================================================
RESUMO DAS ALTERAÇÕES
========================================================================

✅ 3 funções MODIFICADAS:
   - isPacienteAgendado()
   - isVagaLivre()
   - updateVagasLivresUnidadeCards()

✅ 1 função NOVA:
   - isVagaBloqueada()
   - updateVagasBloqueadasUnidadeCards()

✅ 1 função ATUALIZADA:
   - updateDashboard() - adicionar chamada à nova função

O restante do código permanece INALTERADO.

========================================================================
